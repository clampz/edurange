
# Put chef stuff in place
mkdir -p /root/chef/cookbooks/op/recipes
cd /root/chef

# /root/chef/solo.rb
cat << EOF > solo.rb
root = File.absolute_path(File.dirname(__FILE__))

file_cache_path root
cookbook_path root + '/cookbooks'
EOF

# /root/chef/solo.json
cat << EOF > solo.json
{
  "run_list": [ "recipe[op::cheferror]", "recipe[op::default]" ]
}
EOF

# check for cheff error and write to s3 file if found
cat << EOF > /root/chef/cookbooks/op/recipes/cheferror.rb
ruby_block 'chef_error' do
	block do
		if File.exists? "/root/chef/chef-stacktrace.out"
			put = Net::HTTP::Put.new('<%= instance.com_page %>', 'content-type' => 'text/plain')
		  put.body = "error\n" + File.read("/root/chef/chef-stacktrace.out")

		  # send the PUT request
		  http = Net::HTTP.new('<%= Settings.bucket_name %>.<%= Settings.endpoint %>', 443)
		  http.use_ssl = true
		  http.start
		  resp = http.request(put)
		  resp = [resp.code.to_i, resp.to_hash, resp.body]
		  http.finish
		end
	end
	action :run
end
EOF

# /root/chef/cron.sh - Every 2 minutes get script on internet, place cookbooks/op/recipes/default.rb, run chef-solo
cat << EOF > cron.sh
#!/usr/bin/env bash
cd /root/chef/cookbooks/op/recipes/
wget -O default.rb '<%= instance.cookbook_url %>'
cd /root/chef
#/usr/local/bin/chef-solo -c solo.rb -j solo.json
chef-solo -c solo.rb -j solo.json
EOF

# Crontab entry - Run cron.sh every 2 minutes
crontab -l | { cat; echo "*/2 * * * * /bin/bash /root/chef/cron.sh"; } | crontab -
chmod +x /root/chef/cron.sh
/root/chef/cron.sh # Install stuff initially, don't wait 10 min

echo "finished - CLOUD INIT"